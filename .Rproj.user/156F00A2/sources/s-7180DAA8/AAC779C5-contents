#########################################################################################
# Test GSQR
#########################################################################################

    #install.packages("devtools")
    library(devtools)
    install_github("psoerensen/qgg")


    library(qgg)

    # Simulate data
    m <- 1000
    n <- 2000
    W <- matrix(sample(0:2,n*m, replace=TRUE),ncol=m)
    W <- scale(W)
    colnames(W) <- as.character(1:ncol(W))
    rownames(W) <- as.character(1:nrow(W))
    causal <- sample(1:ncol(W),50)
    y <- rowSums(W[,causal]) + rnorm(nrow(W),sd=sqrt(50))
    X <- model.matrix(y~1)

    validate <- replicate( 5, sample(1:n, as.integer(n/10)))
    
    Sg <- 50
    Se <- 50
    h2 <- Sg/(Sg+Se)
    
    lambda <- Se/(Sg/m)
    lambda <- m*(1-h2)/h2

    # BLUP using Gauss-Seidel procedure
    fitGS <- gsolve( y=y, X=X, W=W, lambda=lambda)
      plotGS(fit=fitGS,sets=causal)

    cvGS <- gsolve( y=y, X=X, W=W, lambda=lambda, validate=validate )
   
    
    # Estimate variance components and BLUP using REML
    G <- computeG(W=W)
    fitGB <- greml(y = y, X = X, G = list(G=G), verbose = TRUE)
    cvGB <- greml(y = y, X = X, G = list(G=G), validate = validate)
    

    # Single marker GWAS + PRS
    fitMA <- lma(y=y, X=X, W=W)
    cvMA <- lma(y=y, X=X, W=W, validate=validate)
    
    